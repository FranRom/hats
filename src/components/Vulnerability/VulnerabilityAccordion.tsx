import React, { useState } from "react";
import "../../styles/Vulnerability/VulnerabilityAccordion.scss";
import AccordionCard from "./AccordionCard";
import ProjectSelect from "./ProjectSelect";
import Description from "./Description";
import PayDeposit from "./PayDeposit";
import ContactInfo from "./ContactInfo";
import Terms from "./Terms";
//import { isEmptyObject } from "../../utils";

export interface ICardData {
  verified: boolean,
  data: any
}

export interface IAccordionContext {
  currentCard: number
  toggleCard: Function
  submitCard: Function
}

export const AccordionContext = React.createContext<IAccordionContext>({currentCard: 1, toggleCard: () => {}, submitCard: () => {}});

const initData: { [id: number]: ICardData } = {
  1: {
    verified: false,
    data: null
  },
  2: {
    verified: false,
    data: null
  },
  3: {
    verified: false,
    data: null
  },
  4: {
    verified: false,
    data: null
  },
  5: {
    verified: false,
    data: null
  }
}

export default function VulnerabilityAccordion() {
  const [currentCard, setCurrentCard] = useState(1);
  //const cachedData = JSON.parse(localStorage.getItem("submitVulnerabilityData") || '{}');
  const [cards, setCards] = useState(initData);

  const toggleCard = (card: number) => {
    setCurrentCard(card);
  }

  const submitCard = (card: number, data?: any) => {
    setCards({ ...cards, [card]: { ...cards[card], verified: true } });
    setCurrentCard(card + 1);
  }

  return <div className="content vulnerability-wrapper">
    <AccordionContext.Provider value={{ currentCard: currentCard, toggleCard: toggleCard, submitCard: submitCard }}>
      <AccordionCard id={1} title="Select Project" data={cards[1]}>
        <ProjectSelect />
      </AccordionCard>
      <AccordionCard id={2} title="Describe vulnerability" data={cards[2]}>
        <Description />
      </AccordionCard>
      <AccordionCard id={3} title="Application Deposit" data={cards[3]}>
        <PayDeposit />
      </AccordionCard>
      <AccordionCard id={4} title="Contact information" data={cards[4]}>
        <ContactInfo />
      </AccordionCard>
      <AccordionCard id={5} title="Terms and conditions" data={cards[5]}>
        <Terms />
      </AccordionCard>
    </AccordionContext.Provider>
  </div>
}
