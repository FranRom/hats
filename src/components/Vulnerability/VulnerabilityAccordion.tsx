import React, { useState } from "react";
import "../../styles/Vulnerability/VulnerabilityAccordion.scss";
import AccordionCard from "./AccordionCard";
import ProjectSelect from "./ProjectSelect";
import Description from "./Description";
import ContactInfo from "./ContactInfo";
import Submit from "./Submit";
import { getAppVersion } from "../../utils";

export interface ICardData {
  verified: boolean,
  data?: any
}

export interface IAccordionContext {
  currentCard: number
  toggleCard: Function
  submitCard: Function
}

export const AccordionContext = React.createContext<IAccordionContext>({ currentCard: 1, toggleCard: () => { }, submitCard: () => { } });

export const initData: { version: string, [id: number]: ICardData } = {
  version: getAppVersion(),
  1: {
    verified: false,
    data: {
      projectName: "",
      projectId: "",
      masterAddress: "",
      description: "",
      rewardsLevels: "",
      totalStaking: "",
      tokenPrice: "",
      honeyPotBalance: ""
    }
  },
  2: {
    verified: false,
    data: {
      username: ""
    },
  },
  3: {
    verified: false,
    data: {
      title: "",
      description: ""
    }
  },
  4: {
    verified: false
  }
}

export default function VulnerabilityAccordion() {
  let cachedData = JSON.parse(localStorage.getItem("submitVulnerabilityData") || JSON.stringify(initData));

  if (cachedData.version !== getAppVersion()) {
    cachedData = initData;
  }

  // Get the first card that hasn't been verified yet
  const [currentCard, setCurrentCard] = useState(Number(Object.keys(cachedData).find(key => cachedData[key].verified === false)));
  const [cards, setCards] = useState(cachedData);

  React.useEffect(() => {
    localStorage.setItem("submitVulnerabilityData", JSON.stringify(cards));
  }, [cards])

  const toggleCard = (card: number) => {
    setCurrentCard(card);
  }

  const submitCard = (card: number, data?: any) => {
    setCards({ ...cards, [card]: { verified: true, data: data } });
    setCurrentCard(card + 1);
  }

  return (
    <div className="content vulnerability-wrapper">
      <div className="accrodion-wrapper">
        <AccordionContext.Provider value={{ currentCard: currentCard, toggleCard: toggleCard, submitCard: submitCard }}>
          <AccordionCard id={1} title="SELECT PROJECT" data={cards[1]}>
            <ProjectSelect data={cards[1].data} />
          </AccordionCard>
          <AccordionCard id={2} title="CONTACT INFORMATION" data={cards[2]}>
            <ContactInfo data={cards[2].data} />
          </AccordionCard>
          <AccordionCard id={3} title="DESCRIBE VULNERABILITY" data={cards[3]}>
            <Description cards={cards} />
          </AccordionCard>
          <AccordionCard id={4} title="SUBMIT" data={cards[4]}>
            <Submit cards={cards} setCards={setCards} />
          </AccordionCard>
        </AccordionContext.Provider>
      </div>
    </div>
  )
}
