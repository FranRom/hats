import InfoIcon from "assets/icons/info.icon";
import ZoomIcon from "assets/icons/zoom.icon";
import NFTMedia from "components/NFTMedia";
import NFTPrize from "components/NFTPrize";
import Modal from "components/Shared/Modal";
import { useSeverityReward } from "components/Vault/hooks/useSeverityReward";
import { Colors, RC_TOOLTIP_OVERLAY_INNER_STYLE } from "constants/constants";
import Tooltip from "rc-tooltip";
import { useState } from "react";
import { ISeverity, IVault } from "types/types";
import { formatNumber } from "utils";

interface IProps {
  vault: IVault;
  severity: ISeverity;
}

export default function Award({ vault, severity }: IProps) {
  const rewardPrice = useSeverityReward(vault, severity.index);
  const rewardPercentage = (Number(vault.rewardsLevels[severity.index]) / 10000) * 100;
  const [showNFTModal, setShowNFTModal] = useState(false);
  const [modalNFTData, setModalNFTData] = useState({});

  return (
    <>
      <tr className={`${severity.name.toLocaleLowerCase().split(' ').join('-')}`}>
        <td>{severity.name.toUpperCase()}</td>
        <td className="total-vault-wrapper">
          <b>{`${rewardPercentage.toFixed(2)}%`}</b> of vault &#8776; {`$${formatNumber(rewardPrice)}`}&nbsp;
          <Tooltip
            overlay="Prizes are in correlation to the funds in the vault and may change at any time"
            overlayClassName="tooltip"
            overlayInnerStyle={RC_TOOLTIP_OVERLAY_INNER_STYLE}>
            <span><InfoIcon width="15" height="15" fill={Colors.white} /></span>
          </Tooltip>
        </td>
        <td className="nft-wrapper" onClick={() => { setShowNFTModal(true); setModalNFTData(severity); }}>
          <NFTMedia link={severity?.["nft-metadata"]?.image} width="50px" />
          <ZoomIcon />
        </td>
      </tr>
      {
        showNFTModal &&
        <Modal title="NFT PRIZE" setShowModal={setShowNFTModal} maxWidth="600px" width="60%" height="fit-content">
          <NFTPrize data={modalNFTData as any} />
        </Modal>
      }
    </>
  )
}
